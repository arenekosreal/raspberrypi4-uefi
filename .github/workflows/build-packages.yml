name: Auto Build Arch Packages
on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:
  schedule: 
    - cron: '33 3 3,10,17,24,31 * *'
jobs:
  package-build:
    name: Build and Upload Packages for PKGBUILD in this repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true
      - name: Build and Push Docker Image to Docker Hub
        uses: docker/build-push-action@v2.2.2
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/archlinux-ci:latest
          push: true
      - name: Build Package use Image Built before
        run: sudo docker run --rm --privileged=true --env CI=true -v ${{ github.workspace }}:/home/builder/build_files ${{ secrets.DOCKERHUB_USERNAME }}/archlinux-ci:latest
      - name: Generare Release info
        run: |
          cd out
          echo 'SUMS<<EOF' >> $GITHUB_ENV
          sha256sum *.pkg.tar.zst >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8) >> $GITHUB_ENV
          echo DATE=$(date -I | sed s/-//g) >> $GITHUB_ENV
      - name: Push to GitHub Releases
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with: 
          draft: false
          prerelease: false
          tag_name: ${{ env.SHORT_SHA }}-CI-${{ env.DATE }}
          files: "out/*.pkg.tar.zst"
          name: Raspberry Pi 4 UEFI Boot Packages for Arch Based Linux Distribution
          body: |
            CI Build for commit ${{ github.sha }}
            
            sha256sums:
            ```
            ${{ env.SUMS }}
            ```

            Notes:
            - `/boot/overlays` built from raspberrypi kernel has been splited into a single package called `raspberrypi4-overlays-raspberrypi-git` which is needed by `uefi-raspberrypi4` because generic kernel doesn't have overlays.
