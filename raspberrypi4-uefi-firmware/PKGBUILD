# Maintainer: zhanghua <zhanghua.00@qq.com>

pkgname="raspberrypi4-uefi-firmware" 
pkgver=1.32.2.g656133b
pkgrel=2
backup=("boot/config.txt")
pkgdesc="UEFI firmware for RaspberryPi 4B"
url="https://github.com/pftf/RPi4"
arch=("aarch64")
license=("custom")
groups=("raspberrypi4-uefi")
depends=("raspberrypi4-overlays")
optdepends=("brcmfmac43455-firmware: WLAN firmware for 4B")
makedepends=("gcc10" "git" "uuid" "acpica" "python-distutils" "openssl" "util-linux")
if [ $(uname -m) != "aarch64" ]
then
    makedepends+=("aarch64-linux-gnu-gcc")
    export CROSS_COMPILE=aarch64-linux-gnu-
fi
source=(
    git+https://github.com/pftf/RPi4
    LICENCE.EDK2::https://raw.githubusercontent.com/tianocore/edk2/master/License.txt
	LICENCE.broadcom::https://raw.githubusercontent.com/raspberrypi/firmware/master/boot/LICENCE.broadcom
	ms_kek.cer::https://go.microsoft.com/fwlink/?LinkId=321185
	ms_db1.cer::https://go.microsoft.com/fwlink/?linkid=321192
	ms_db2.cer::https://go.microsoft.com/fwlink/?linkid=321194
	arm64_dbx.bin::https://uefi.org/sites/default/files/resources/dbxupdate_arm64.bin
    build.sh
)
sha256sums=('SKIP'
            '50ce20c9cfdb0e19ee34fe0a51fc0afe961f743697b068359ab2f862b494df80'
            'c7283ff51f863d93a275c66e3b4cb08021a5dd4d8c1e7acc47d872fbe52d3d6b'
            'a1117f516a32cefcba3f2d1ace10a87972fd6bbe8fe0d0b996e09e65d802a503'
            'e8e95f0733a55e8bad7be0a1413ee23c51fcea64b3c8fa6a786935fddcc71961'
            '48e99b991f57fc52f76149599bff0a58c47154229b9f8d603ac40d3500248507'
            'f42c187f8b01b497f81fb0459164b27d16ca2af0b95c7331a82c1a27a731a885'
            '08e3ba84d75e209d0a88e8a774caca6e8c93092001bd7cffe7fdaa37e2841bc7')

pkgver(){
    cd ${srcdir}/RPi4
	git describe --tags | sed "s/v//;s/-/./g"
}
prepare(){
    cd ${srcdir}/RPi4
    git submodule update --init --recursive
    mkdir -p keys
    cp ${srcdir}/{ms_kek.cer,ms_db1.cer,ms_db2.cer,arm64_dbx.bin} keys/
    openssl req -new -x509 -newkey rsa:2048 -subj "/CN=Raspberry Pi Platform Key/" -keyout /dev/null -outform DER -out keys/pk.cer -days 7300 -nodes -sha256
    cp ${srcdir}/build.sh build.sh
    patch --binary -d edk2 -p1 -i ../0001-MdeModulePkg-UefiBootManagerLib-Signal-ReadyToBoot-o.patch
	patch --binary -d edk2-platforms -p1 -i ../0002-Check-for-Boot-Discovery-Policy-change.patch
	mkdir -p ${srcdir}/gcc10
	cd ${srcdir}/gcc10
	for item in c++ c89 c99 cc cpp g++ gcc gcc-ar gcc-nm gcc-ranlib
	do
        	ln -sf /usr/bin/${item}-10 ${item}
    done
	# We use gcc 10 to create BrotliCompress to avoid compile failure. Simply downgrade gcc to 10 will broke whole Arch Distribution.
}
build(){
    cd ${srcdir}/RPi4
    sed -i "s/%FIRMVER%/${pkgver}-${pkgrel}/;s/%CROSS_COMPILE%/${CROSS_COMPILE}/" build.sh
    CHOST= CARCH= CPPFLAGS= CFLAGS= CXXFLAGS= LDFLAGS= PATH="${srcdir}/gcc10":${PATH} make -C edk2/BaseTools
    MAKEFLAGS= bash build.sh
}
package(){
	install -Dm644 ${srcdir}/RPi4/Build/RPi4/RELEASE_GCC5/FV/RPI_EFI.fd ${pkgdir}/boot/RPI_EFI.fd
	install -Dm644 ${srcdir}/RPi4/config.txt ${pkgdir}/boot/config.txt
    install -Dm644 ${srcdir}/LICENCE.EDK2 ${pkgdir}/usr/share/licenses/${pkgname}/LICENCE.EDK2
    install -Dm644 ${srcdir}/LICENCE.broadcom ${pkgdir}/usr/share/licenses/${pkgname}/LICENCE.broadcom
}
