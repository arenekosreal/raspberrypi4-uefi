# Maintainer: zhanghua <zhanghua.00@qq.com>

USE_LLVM=${USE_LLVM:-false}

buildarch=8 # aarch64

pkgname="uefi-raspberrypi4-git" 
pkgver=20221225
pkgrel=1
backup=("boot/config.txt")
pkgdesc="UEFI firmware for RaspberryPi 4B (git version)"
url="https://github.com/tianocore"
arch=("aarch64")
license=("custom:edk2" "custom:broadcom")
makedepends=("git" "acpica" "openssl" "util-linux" "python" "clang" "llvm" "lld")
source=(
    "git+https://github.com/tianocore/edk2-non-osi.git"
    "git+https://github.com/tianocore/edk2-platforms.git"
    "git+https://github.com/tianocore/edk2.git"
    "https://github.com/pftf/RPi4/raw/master/0002-Check-for-Boot-Discovery-Policy-change.patch"
    "https://github.com/pftf/RPi4/raw/master/0001-MdeModulePkg-UefiBootManagerLib-Signal-ReadyToBoot-o.patch"
    "LICENCE.EDK2::https://raw.githubusercontent.com/tianocore/edk2/master/License.txt"
    "LICENCE.broadcom::https://raw.githubusercontent.com/raspberrypi/firmware/master/boot/LICENCE.broadcom"
    "ms_kek.cer::https://go.microsoft.com/fwlink/?LinkId=321185"
    "ms_db1.cer::https://go.microsoft.com/fwlink/?linkid=321192"
    "ms_db2.cer::https://go.microsoft.com/fwlink/?linkid=321194"
    "arm64_dbx.bin::https://uefi.org/sites/default/files/resources/dbxupdate_arm64.bin"
    "build.sh"
    "config.txt"
    "70-post-install-uefi.hook"
    "80-pre-remove-uefi.hook"
    "post-install-uefi"
    "pre-remove-uefi"
)
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            '302b64f055853ff5f8ec1b24ed7b2bd7b6c7f7b86114fd9d1762b74332d794dc'
            'e6ddd8e9f391bcec23aaf12757f91939deea6ae8af04a7ed3f314e403c6697ed'
            '50ce20c9cfdb0e19ee34fe0a51fc0afe961f743697b068359ab2f862b494df80'
            'c7283ff51f863d93a275c66e3b4cb08021a5dd4d8c1e7acc47d872fbe52d3d6b'
            'a1117f516a32cefcba3f2d1ace10a87972fd6bbe8fe0d0b996e09e65d802a503'
            'e8e95f0733a55e8bad7be0a1413ee23c51fcea64b3c8fa6a786935fddcc71961'
            '48e99b991f57fc52f76149599bff0a58c47154229b9f8d603ac40d3500248507'
            'f42c187f8b01b497f81fb0459164b27d16ca2af0b95c7331a82c1a27a731a885'
            '4b71df9b8e7dd77b9534efb16a220849ef2ebe789739fc7a198b581217a29d8f'
            '96d0176152702a67935b8e288ec6a206952b716ee7607c45376a696253a266d5'
            '8e55eb4afdd6b572d2413e87b64219d2f9d3bd033de2dfd37e176e92d25d5821'
            'caa86b22a1452d8974e7bbecbb6d9fb591a58da928a06d5e13cee9592e785b12'
            '02a799c12e818c6a177df4a5c52454d177f3c8cea11584fcc19e392f08c7418c'
            '4052d07f78e0230406c311aab5dcd153c111fb72024d4afa33f2ea019eeb3a6a')

pkgver(){
    cd ${srcdir}
    date -uI | sed "s/-//g"
}
prepare(){
    
    for dir in edk2 edk2-non-osi edk2-platforms
    do
        git -C ${srcdir}/${dir} submodule update --init --recursive
    done
    cd ${srcdir}
    mkdir -p keys
    cp ${srcdir}/{ms_kek.cer,ms_db1.cer,ms_db2.cer,arm64_dbx.bin} keys/
    openssl req -new -x509 -newkey rsa:2048 -subj "/CN=Raspberry Pi Platform Key/" -keyout /dev/null -outform DER -out keys/pk.cer -days 7300 -nodes -sha256
    cp ${srcdir}/build.sh build-runtime.sh
    patch --binary -d edk2 -p1 -i ../0001-MdeModulePkg-UefiBootManagerLib-Signal-ReadyToBoot-o.patch
    patch --binary -d edk2-platforms -p1 -i ../0002-Check-for-Boot-Discovery-Policy-change.patch
}
build(){
    cd ${srcdir}
    if [[ $(uname -m) != "aarch64" ]]
    then
        CROSS_COMPILE=aarch64-linux-gnu-
    fi
    sed -i "s/%FIRMVER%/${pkgver}-${pkgrel}/g;s/%CROSS_COMPILE%/${CROSS_COMPILE}/g;s/%COMPILER%/CLANG38/g" build-runtime.sh
    MAKEFLAGS= PYTHON_COMMAND=python make -C edk2/BaseTools CXX=llvm
    bash build-runtime.sh
}
package(){
    provides=("uefi-raspberrypi4")
    conflicts=("uboot-raspberrypi" "uefi-raspberrypi4")
    depends=("raspberrypi-overlays" "linux-aarch64>=5.8" "raspberrypi-bootloader")
    optdepends=(
        "firmware-raspberrypi: firmware for RaspberryPi 4B"
        "linux-firmware: firmware for RaspberryPi 4B")

    install -Dm644 ${srcdir}/Build/RPi4/RELEASE_CLANG38/FV/RPI_EFI.fd ${pkgdir}/boot/RPI_EFI.fd
    install -Dm644 ${srcdir}/config.txt ${pkgdir}/boot/config.txt
    install -Dm644 ${srcdir}/70-post-install-uefi.hook ${pkgdir}/usr/share/libalpm/hooks/70-post-install-uefi.hook
    install -Dm644 ${srcdir}/80-pre-remove-uefi.hook ${pkgdir}/usr/share/libalpm/hooks/80-pre-remove-uefi.hook
    install -Dm755 ${srcdir}/post-install-uefi ${pkgdir}/usr/share/libalpm/scripts/post-install-uefi
    install -Dm755 ${srcdir}/pre-remove-uefi ${pkgdir}/usr/share/libalpm/scripts/pre-remove-uefi
    install -Dm644 ${srcdir}/LICENCE.EDK2 ${pkgdir}/usr/share/licenses/${pkgname}/LICENCE.EDK2
    install -Dm644 ${srcdir}/LICENCE.broadcom ${pkgdir}/usr/share/licenses/${pkgname}/LICENCE.broadcom
}
